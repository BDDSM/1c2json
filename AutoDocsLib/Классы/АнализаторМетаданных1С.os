#Использовать ".\Internal"

Перем ЧтениеXML;
Перем НастройкиМетаданных;
Перем НастройкиОбъекта;

Перем ЕстьОшибки;

Процедура ПриСозданииОбъекта(Настройки)

	НастройкиМетаданных = Настройки.НастройкиМетаданных;

	// В настройках метаданных может быть:
	// - "Atribute",
	// - "StandardAttribute",
	// - "Command"
	// - "Form"
	// - "Template"
	// - "TabularSelection"
	// - "Characteristic"

КонецПроцедуры

Функция МетаданныеИзФайла(Знач ПолноеИмяФайла) Экспорт

	//Сообщить("Обработка файла " + ПолноеИмяФайла);

	ЕстьОшибки = Ложь;

	ЧтениеXML = Новый ЧтениеXML();
	ЧтениеXML.Открыть(ПолноеИмяФайла);

	ЧтениеXML.Прочитать();
	Если ЧтениеXML.ТипУзла = ТипУзлаXML.ОбъявлениеXML Тогда
		ЧтениеXML.Прочитать();
	КонецЕсли;
	
	ОписаниеОбъекта = Новый Структура;

	Если ЭтоУзелXML("MetaDataObject") Тогда
		ЧтениеXML.Прочитать();
		ВидОбъекта = ЧтениеXML.Имя;
		Если НастройкиМетаданных[ВидОбъекта] <> Неопределено Тогда
			НастройкиОбъекта = НастройкиМетаданных[ВидОбъекта];
			ПрочитатьБлокXML(ОписаниеОбъекта);
		КонецЕсли;
	КонецЕсли;

	ЧтениеXML.Закрыть();

	Если ЕстьОшибки Тогда
		Сообщить("Обработан файл " + ПолноеИмяФайла);
	КонецЕсли;

	Возврат ОписаниеОбъекта;

КонецФункции

Процедура ПрочитатьБлокXML(ОписаниеБлока)

	ИмяБлока = ЧтениеXML.Имя;

	ЧтениеXML.Прочитать();

	Пока НЕ ЭтоКонецУзлаXML(ИмяБлока) Цикл
		Если ЭтоУзелXML("Properties") Тогда
			ПрочитатьProperties(ОписаниеБлока);
		ИначеЕсли ЭтоУзелXML("ChildObjects") Тогда
			ПрочитатьChildObjects(ОписаниеБлока);
		Иначе
			ПропуститьУзелXML();
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ПрочитатьProperties(ОписаниеБлока)

	ЧтениеXML.Прочитать();
	Пока НЕ ЭтоКонецУзлаXML("Properties") Цикл
		ИмяСвойства = ЧтениеXML.Имя;
		Если НЕ ПрочитатьStandardAttributes(ОписаниеБлока)
		   И НЕ ПрочитатьCharacteristics(ОписаниеБлока)
		   И НЕ ПрочитатьStandardTabularSections(ОписаниеБлока)
		Тогда
			ЗначениеСвойства = ПрочитатьЗначениеXML();
			Если ЗначениеЗаполнено(ЗначениеСвойства) Тогда
				ОписаниеБлока.Вставить(ИмяСвойства, ЗначениеСвойства);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЧтениеXML.Прочитать(); // Конец Properties

КонецПроцедуры

Процедура ПрочитатьChildObjects(ОписаниеОбъекта)

	ЧтениеXML.Прочитать();

	Пока НЕ ЭтоКонецУзлаXML("ChildObjects") Цикл
		Если НастройкиОбъекта[ЧтениеXML.Имя] <> Истина Тогда
			ПропуститьУзелXML();
		Иначе
			МассивЭлементов = Неопределено;
			Если НЕ ОписаниеОбъекта.Свойство(ЧтениеXML.Имя, МассивЭлементов) Тогда
				МассивЭлементов = Новый Массив;
				ОписаниеОбъекта.Вставить(ЧтениеXML.Имя, МассивЭлементов);
			КонецЕсли;
			Если ЭтоУзелXML("Form") ИЛИ ЭтоУзелXML("Template") ИЛИ ЭтоУзелXML("Subsystem") Тогда
				ОписаниеЭлемента = ПрочитатьЗначениеXML();
			ИначеЕсли ЭтоУзелXML("TabularSection") Тогда
				// Прочитать описание вложенного блока объекта ТабличнаяЧасть
				ОписаниеЭлемента = Новый Структура;
				ПрочитатьБлокXML(ОписаниеЭлемента);
				ЧтениеXML.Прочитать();
			ИначеЕсли ЭтоУзелXML("Operation") Тогда
				// Прочитать описание вложенного блока объекта Операция веб-сервиса
				ОписаниеЭлемента = Новый Структура;
				ПрочитатьБлокXML(ОписаниеЭлемента);
				ЧтениеXML.Прочитать();
			Иначе
				// Attribute, Command, Resource, Dimension, Parameter
				ЧтениеXML.Прочитать();
				ОписаниеЭлемента = Новый Соответствие;
				ПрочитатьProperties(ОписаниеЭлемента);
				ЧтениеXML.Прочитать();
			КонецЕсли;
			МассивЭлементов.Добавить(ОписаниеЭлемента);
		КонецЕсли;
	КонецЦикла;
	ЧтениеXML.Прочитать(); // Конец ChildObjects

КонецПроцедуры

Функция ПрочитатьStandardTabularSections(ОписаниеБлока)
	ИмяУзла = ЧтениеXML.Имя;
	Если ИмяУзла <> "StandardTabularSections" Тогда
		Возврат Ложь;
	КонецЕсли;
	ПропуститьУзелXML();
	Возврат Истина;
КонецФункции

Функция ПрочитатьCharacteristics(ОписаниеБлока)
	ИмяУзла = ЧтениеXML.Имя;
	Если ИмяУзла <> "Characteristics" Тогда
		Возврат Ложь;
	КонецЕсли;
	ПропуститьУзелXML();
	Возврат Истина;
КонецФункции

Функция ПрочитатьStandardAttributes(ОписаниеБлока)
	ИмяУзла = ЧтениеXML.Имя;
	Если ИмяУзла <> "StandardAttributes" Тогда
		Возврат Ложь;
	КонецЕсли;
	Если НастройкиОбъекта["StandardAttribute"] <> Истина Тогда
		ПропуститьУзелXML();
	Иначе
		ЧтениеXML.Прочитать();
		МассивЭлементов = Новый Массив;
		Пока НЕ ЭтоКонецУзлаXML(ИмяУзла) Цикл
			ИмяАттрибута = ЧтениеXML.ЗначениеАтрибута(0);
			ЧтениеXML.Прочитать();
			СоответствиеСвойств = ПрочитатьОписаниеСоответствия("xr:StandardAttribute");
			СоответствиеСвойств.Вставить("Name", ИмяАттрибута);
			МассивЭлементов.Добавить(СоответствиеСвойств);
		КонецЦикла;
		ОписаниеБлока.Вставить("StandardAttribute", МассивЭлементов);
		ЧтениеXML.Прочитать();
	КонецЕсли;
	Возврат Истина;
КонецФункции

Функция ПрочитатьЗначениеXML()

	ИмяЭлемента = ЧтениеXML.Имя;
	ЧтениеXML.Прочитать();
	Если ЭтоКонецУзлаXML(ИмяЭлемента) Тогда
		Значение = ""; // Пустой узел
	ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда 
		Значение = ЧтениеXML.Значение;
		ЧтениеXML.Прочитать(); // Конец узла текста
	ИначеЕсли ЭтоУзелXML("v8:item") Тогда
		Значение = ПрочитатьМультиязычнуюСтрокуXML()["ru"];
	ИначеЕсли ЭтоУзелXML("v8:Type") ИЛИ ЭтоУзелXML("v8:TypeSet") Тогда
		Значение = ПрочитатьОписаниеТипа(ИмяЭлемента);
	ИначеЕсли ЭтоУзелXML("xr:Field") ИЛИ ЭтоУзелXML("xr:Object") Тогда
		Значение = ПрочитатьОписаниеМассива(ИмяЭлемента);
	ИначеЕсли ЭтоУзелXML("xr:Item") ИЛИ ЭтоУзелXML("v8:Value") Тогда
		Если ЧтениеXML.КоличествоАтрибутов() = 1 Тогда
			// Массив имен метаданных с типом xsi:type="xr:MDObjectRef"
			Значение = ПрочитатьОписаниеМассива(ИмяЭлемента);
		Иначе
			Значение = Новый Массив;
			Пока НЕ ЭтоКонецУзлаXML(ИмяЭлемента) Цикл
				ЧтениеXML.Прочитать();
				СоответствиеСвойств = ПрочитатьОписаниеСоответствия("xr:Item");
				Значение.Добавить(СоответствиеСвойств);
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли ЭтоУзелXML("xr:Ref") Тогда
		ПропуститьУзелXML(ИмяЭлемента);  // TODO массив имен картинок в xr:Ref
	ИначеЕсли ЭтоУзелXML("xr:Link") Тогда
		ПропуститьУзелXML(ИмяЭлемента); // TODO Связи параметров выбора для справочников 
	ИначеЕсли ЭтоУзелXML("app:item") Тогда
		ПропуститьУзелXML(ИмяЭлемента); // TODO пропуск для app:item для ПланСчетов.Хозрасчетный
	ИначеЕсли ЭтоУзелXML("xr:DataPath") Тогда
		ПропуститьУзелXML(ИмяЭлемента); // TODO пропуск для xr:LinkByType для ПланСчетов.Хозрасчетный
	ИначеЕсли ЭтоУзелXML("v8:pair") Тогда
		ПропуститьУзелXML(ИмяЭлемента); // пропуск соответствия RequiredMobileApplicationPermissions в описании Configuration 
	Иначе
		Сообщить("Найдено неизвестное описание значения " + ЧтениеXML.Имя);
		ЕстьОшибки = Истина;
		Пока ЭтоУзелXML(ИмяЭлемента) Цикл
			ПропуститьУзелXML();
		КонецЦикла;
	КонецЕсли;
	ЧтениеXML.Прочитать(); // Конец элемента

	Возврат Значение;

КонецФункции

Функция ПрочитатьОписаниеТипа(Знач ИмяЭлемента)

	// Чтение описания типов
	Типы = Новый Массив;
	КвалификаторыЧисла = Новый Соответствие;
	КвалификаторыСтроки = Новый Соответствие;
	КвалификаторыДаты  = Новый Соответствие;

	Пока НЕ ЭтоКонецУзлаXML(ИмяЭлемента) Цикл

		Если ЭтоУзелXML("v8:Type") ИЛИ ЭтоУзелXML("v8:TypeSet") Тогда
			Типы.Добавить(ПрочитатьЗначениеXML());

		ИначеЕсли ЭтоУзелXML("v8:NumberQualifiers") Тогда
			ЧтениеXML.Прочитать();
			КвалификаторыЧисла = ПрочитатьОписаниеСоответствия("v8:NumberQualifiers");
			
		ИначеЕсли ЭтоУзелXML("v8:StringQualifiers") Тогда
			ЧтениеXML.Прочитать();
			КвалификаторыСтроки = ПрочитатьОписаниеСоответствия("v8:StringQualifiers");

		ИначеЕсли ЭтоУзелXML("v8:DateQualifiers") Тогда
			ЧтениеXML.Прочитать();
			КвалификаторыДаты = ПрочитатьОписаниеСоответствия("v8:DateQualifiers");

		Иначе
			ПропуститьУзелXML();
		КонецЕсли;

	КонецЦикла; 

	// Генерация строкового представления типа

	ИндексТипаЧисло = Типы.Найти("xs:decimal");
	Если ИндексТипаЧисло <> Неопределено Тогда
		ПредставлениеТипа = СтрШаблон("%1(%2,%3,%4)", 
			Типы[ИндексТипаЧисло],
			КвалификаторыЧисла["v8:Digits"],
			КвалификаторыЧисла["v8:FractionDigits"],
			КвалификаторыЧисла["v8:AllowedSign"]);
		Типы[ИндексТипаЧисло] = ПредставлениеТипа;
	КонецЕсли;

	ИндексТипаСтрока = Типы.Найти("xs:string");
	Если ИндексТипаСтрока <> Неопределено Тогда
		ПредставлениеТипа = СтрШаблон("%1(%2,%3)", 
			Типы[ИндексТипаСтрока],
			КвалификаторыСтроки["v8:Length"],
			КвалификаторыСтроки["v8:AllowedLength"]);
		Типы[ИндексТипаСтрока] = ПредставлениеТипа;
	КонецЕсли;

	ИндексТипаДата = Типы.Найти("xs:date");
	Если ИндексТипаДата <> Неопределено Тогда
		ПредставлениеТипа = СтрШаблон("%1(%2)", 
			Типы[ИндексТипаДата],
			КвалификаторыДаты["v8:DateFractions"]);
		Типы[ИндексТипаДата] = ПредставлениеТипа;
	КонецЕсли;

	//ОписаниеТипа = СтрСоединить(Типы, ",");

	Возврат Типы;

КонецФункции

// Возвращает соответствие представлений мультиязычной строки
Функция ПрочитатьМультиязычнуюСтрокуXML()

	СоответствиеЗначений = Новый Соответствие;
	Пока ЭтоУзелXML("v8:item") Цикл
		ЧтениеXML.Прочитать();
		СоответствиеСвойств = ПрочитатьОписаниеСоответствия("v8:item");
		Если СоответствиеСвойств["v8:lang"] <> Неопределено Тогда
			СоответствиеЗначений.Вставить(
				СоответствиеСвойств["v8:lang"],
				СоответствиеСвойств["v8:content"]);
		КонецЕсли;
	КонецЦикла;
	Возврат СоответствиеЗначений;

КонецФункции

// Считывает соответствие имен узлов их обрабатываемым значениям
Функция ПрочитатьОписаниеСоответствия(Знач ИмяЭлемента)

	СоответствиеСвойств = Новый Соответствие;

	Пока НЕ ЭтоКонецУзлаXML(ИмяЭлемента) Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			ИмяСвойства = ЧтениеXML.Имя;
			ЗначениеСвойства = ПрочитатьЗначениеXML();
			Если ЗначениеЗаполнено(ЗначениеСвойства) Тогда
				СоответствиеСвойств.Вставить(ИмяСвойства, ЗначениеСвойства);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЧтениеXML.Прочитать();

	Возврат СоответствиеСвойств;

КонецФункции

// Считывает вложенный массив элементов, заданный обрабатываемыми значениями
Функция ПрочитатьОписаниеМассива(Знач ИмяЭлемента)

	Значение = Новый Массив;

	Пока НЕ ЭтоКонецУзлаXML(ИмяЭлемента) Цикл
		Значение.Добавить(ПрочитатьЗначениеXML());
	КонецЦикла;

	Возврат Значение;

Конецфункции

// Пропускает все вложенные узлы до конца указанного узла или только один узел, если имя узла не указано
Процедура ПропуститьУзелXML(Знач ИмяУзла = Неопределено)
	Пока Истина Цикл
		ЧтениеXML.Пропустить(); // После выполнения - позиция на конец элемента
		ЧтениеXML.Прочитать();
		Если ИмяУзла = Неопределено ИЛИ ЭтоКонецУзлаXML(ИмяУзла) Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// Проверяет, что сейчас начыинается указанный узел
Функция ЭтоУзелXML(ИмяУзла)
	Возврат ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя = ИмяУзла;
КонецФункции

// Проверяет, что сейчас заканчивается указанный узел
Функция ЭтоКонецУзлаXML(ИмяУзла)
	Возврат ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента И ЧтениеXML.Имя = ИмяУзла;
КонецФункции